{
    // Editor Settings 
    "code-runner.saveFileBeforeRun": true,
    "terminal.integrated.defaultProfile.windows": "Windows PowerShell",
    "editor.wordWrap": "on",
    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false,
    "editor.snippetSuggestions": "top",
    "editor.tabCompletion": "onlySnippets",
    "breadcrumbs.enabled": false,
    "editor.renderWhitespace": "all",
    
    // Code Runner Settings
    "code-runner.clearPreviousOutput": true,
    "code-runner.showExecutionMessage": false,
    "code-runner.executorMap": {

        "javascript": "node",
        "java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
        "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "zig": "zig run",
        "cpp": "cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "objective-c": "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "php": "php",
        "python": "python -u",
        "perl": "perl",
        "perl6": "perl6",
        "ruby": "ruby",
        "go": "go run",
        "lua": "lua",
        "groovy": "groovy",
        "powershell": "powershell -ExecutionPolicy ByPass -File",
        "bat": "cmd /c",
        "shellscript": "bash",
        "fsharp": "fsi",
        "csharp": "scriptcs",
        "vbscript": "cscript //Nologo",
        "typescript": "ts-node",
        "coffeescript": "coffee",
        "scala": "scala",
        "swift": "swift",
        "julia": "julia",
        "crystal": "crystal",
        "ocaml": "ocaml",
        "r": "Rscript",
        "applescript": "osascript",
        "clojure": "lein exec",
        "haxe": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
        "rust": "cd $dir && rustc $fileName && $dir$fileNameWithoutExt",
        "racket": "racket",
        "scheme": "csi -script",
        "ahk": "autohotkey",
        "autoit": "autoit3",
        "dart": "dart",
        "pascal": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
        "d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
        "haskell": "runghc",
        "nim": "nim compile --verbosity:0 --hints:off --run",
        "lisp": "sbcl --script",
        "kit": "kitc --run",
        "v": "v run",
        "sass": "sass --style expanded",
        "scss": "scss --style expanded",
        "less": "cd $dir && lessc $fileName $fileNameWithoutExt.css",
        "FortranFreeForm": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran-modern": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran_fixed-form": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "sml": "cd $dir && sml $fileName",
        "mojo": "mojo run",
        "erlang": "escript",
        "spwn": "spwn build",
        "pkl": "cd $dir && pkl eval -f yaml $fileName -o $fileNameWithoutExt.yaml",
        "gleam": "gleam run -m $fileNameWithoutExt"
    },
    "code-runner.runInTerminal": true,
    "terminal.integrated.profiles.windows": {
        "PowerShell": {
            "source": "PowerShell",
            "icon": "terminal-powershell"
        },
        "Command Prompt": {
            "path": [
                "${env:windir}\\Sysnative\\cmd.exe",
                "${env:windir}\\System32\\cmd.exe"
            ],
            "args": [],
            "icon": "terminal-cmd"
        },
        "Git Bash": {
            "source": "Git Bash"
        },
        "Windows PowerShell": {
            "path": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"
        }
    },

    // Vim Status Bar Settings
    "vscode_custom_css.imports": [
        "file://c:\\Users\\mkolb\\.vscode\\extensions\\jonatanbakucz.vim-status-bar-1.0.0\\vim-status-bar.css"
    ],
 
    // Vim Binds
    "vim.timeout": 200,
    // "vim.leader": "<Esc>",
    "vim.useSystemClipboard": true,
    "editor.lineNumbers": "relative", 
    "vim.useCtrlKeys": true,
    "vim.handleKeys": {
        "<C-f>": true,
        "<C-a>": false
    },

    // NORMAL MODE BINDS
    "vim.normalModeKeyBindings": [
        {
            "before": ["c", "n"],
            "after": ["v", "0", "g", "_", "y"]
        },
        {
            "before": ["x", "n"],
            "after": ["v", "g", "_", "y", "d", "d"]
        },
        {
            "before": ["v", "n"],
            "after": ["O", "<Esc>", "p"]
        },
        {
            "before": ["9"],
            "after": ["^"]
        },
        {
            "before": ["<Tab>"],
            "after": [">"]
        }
    ],
    //INSERT MODE BINDS
    "vim.insertModeKeyBindings": [
        {
            "before": ["f", "j"],
            "after": ["<Esc>"]
        },
        {
            "before": ["j", "f"],
            "after": ["<Esc>"]
        }
    ],
    //VISUAL MODE BINDS
    "vim.visualModeKeyBindings": [
        {
            "before": ["f", "j"],
            "after": ["<Esc>"]
        },
        {
            "before": ["j", "f"],
            "after": ["<Esc>"]
        },
        {
            "before": ["<Tab>"],
            "after": [">"]
        },
        {
            "before": ["9"],
            "after": ["$"]
        }
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
        {
            "before": ["<S-Tab>"],
            "after": ["<"]
        },
        {
            "before": ["&"], // '&' corresponds to Shift + 7
            "commands": [
                {
                    "command": ":<C-U>normal! c(<C-r>\")<Esc>",
                    "args": []
                }
            ]
        }
    ],
    "workbench.colorCustomizations": {
        "statusBar.background": "#005f5f",
        "statusBar.noFolderBackground": "#005f5f",
        "statusBar.debuggingBackground": "#005f5f",
        "statusBar.foreground": "#ffffff",
        "statusBar.debuggingForeground": "#ffffff"
    }

}